# Generated by Django 5.2.5 on 2025-09-08 07:28

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, unique=True)),
                ('description', models.TextField()),
                ('discount_percent', models.PositiveIntegerField(default=0)),
                ('max_discount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('is_active', models.BooleanField(default=True)),
                ('expiry_date', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='DistanceReward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehicle_type', models.CharField(blank=True, help_text='Enter vehicle type (admin can add new types dynamically)', max_length=50, null=True)),
                ('min_distance', models.FloatField()),
                ('max_distance', models.FloatField(blank=True, null=True)),
                ('cashback', models.FloatField(default=0)),
                ('water_bottles', models.IntegerField(default=0)),
                ('tea', models.IntegerField(default=0)),
                ('discount', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FareRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehicle_type', models.CharField(max_length=50)),
                ('min_distance', models.FloatField(default=0)),
                ('max_distance', models.FloatField(blank=True, null=True)),
                ('per_km_rate', models.FloatField()),
                ('gst_percentage', models.FloatField(default=0)),
                ('commission_percentage', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='IntegrationSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('maps_api_key', models.CharField(blank=True, max_length=255, null=True)),
                ('sms_api_key', models.CharField(blank=True, max_length=255, null=True)),
                ('payment_api_key', models.CharField(blank=True, max_length=255, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='TourismOffer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('discount', models.CharField(blank=True, max_length=100, null=True)),
                ('tea', models.IntegerField(default=0)),
                ('water_bottles', models.IntegerField(default=0)),
                ('long_term_days', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='VehicleType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('vehicleImage', models.FileField(blank=True, null=True, upload_to='vehicle_types/')),
                ('base_fare', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('per_km_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('per_minute_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('seating_capacity', models.IntegerField()),
                ('luggage_capacity', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_driver', models.IntegerField(blank=True, default=0, null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('mobile', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('is_user', models.IntegerField(blank=True, default=0, null=True)),
                ('profile_photo', models.FileField(blank=True, null=True, upload_to='profile_photos/')),
                ('emergency_contact_number', models.CharField(blank=True, max_length=15, null=True)),
                ('driving_license', models.FileField(blank=True, null=True, upload_to='documents/driving_license/')),
                ('rc_book', models.FileField(blank=True, null=True, upload_to='documents/rc_book/')),
                ('aadhaar', models.FileField(blank=True, null=True, upload_to='documents/aadhaar/')),
                ('pan_card', models.FileField(blank=True, null=True, upload_to='documents/pan_card/')),
                ('vehicle_type', models.CharField(blank=True, max_length=50, null=True)),
                ('model', models.CharField(blank=True, max_length=50, null=True)),
                ('plate_number', models.CharField(blank=True, max_length=20, null=True)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('is_online', models.BooleanField(default=False)),
                ('current_lat', models.FloatField(blank=True, null=True)),
                ('current_lng', models.FloatField(blank=True, null=True)),
                ('preferred_payment_method', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('is_available', models.BooleanField(default=True)),
                ('fcm_token', models.TextField(blank=True, null=True)),
                ('last_location_update', models.DateTimeField(auto_now=True)),
                ('approval_state', models.CharField(choices=[('pending', 'Pending Approval'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('account_status', models.CharField(choices=[('active', 'Active'), ('suspended', 'Suspended'), ('blocked', 'Blocked')], default='active', max_length=20)),
                ('suspended_until', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='DriverIncentive',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ride_type', models.CharField(max_length=20)),
                ('distance', models.FloatField(blank=True, null=True)),
                ('days', models.IntegerField(blank=True, null=True)),
                ('driver_incentive', models.DecimalField(decimal_places=2, max_digits=10)),
                ('details', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('driver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='incentives', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DriverLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('fcm_token', models.TextField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('driver', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='location', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('read', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OTP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=6)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_used', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Ride',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_id', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('pickup', models.CharField(max_length=255)),
                ('drop', models.CharField(max_length=255)),
                ('pickup_lat', models.FloatField(blank=True, null=True)),
                ('pickup_lng', models.FloatField(blank=True, null=True)),
                ('drop_lat', models.FloatField(blank=True, null=True)),
                ('drop_lng', models.FloatField(blank=True, null=True)),
                ('pickup_mode', models.CharField(choices=[('NOW', 'now'), ('LATER', 'later')], default='NOW', max_length=10)),
                ('pickup_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('distance_km', models.FloatField(default=0)),
                ('vehicle_type', models.CharField(default='Car', max_length=20)),
                ('fare', models.FloatField(default=0)),
                ('fare_estimate', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('driver_incentive', models.FloatField(default=0)),
                ('customer_reward', models.JSONField(blank=True, default=dict)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('completed', 'Completed'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('completed', models.BooleanField(default=False)),
                ('paid', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('coupon_applied', models.CharField(blank=True, max_length=20, null=True)),
                ('rating', models.IntegerField(blank=True, null=True)),
                ('feedback', models.TextField(blank=True, null=True)),
                ('assigned_driver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_bookings', to=settings.AUTH_USER_MODEL)),
                ('driver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_rides', to=settings.AUTH_USER_MODEL)),
                ('rejected_by', models.ManyToManyField(blank=True, related_name='rejected_rides', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rides', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RefundRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('refund_amount', models.FloatField()),
                ('reason', models.TextField()),
                ('status', models.CharField(choices=[('requested', 'Requested'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='requested', max_length=20)),
                ('requested_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='refund_requests', to=settings.AUTH_USER_MODEL)),
                ('ride', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='refund_requests', to='api.ride')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('razorpay_order_id', models.CharField(max_length=255)),
                ('razorpay_payment_id', models.CharField(blank=True, max_length=255, null=True)),
                ('razorpay_signature', models.CharField(blank=True, max_length=255, null=True)),
                ('method', models.CharField(choices=[('UPI', 'UPI'), ('Cash', 'Cash'), ('Card', 'Card'), ('WALLET', 'Wallet')], default='UPI', max_length=20)),
                ('paid', models.BooleanField(default=False)),
                ('status', models.CharField(default='PENDING', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('ride', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.ride')),
            ],
        ),
        migrations.CreateModel(
            name='Commission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commission_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('booking', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.ride')),
            ],
        ),
    ]
